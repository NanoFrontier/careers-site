---
const { title, location, href, department } = Astro.props as {
  title: string; location: string; href: string; department?: string;
};
const lang = (Astro.props as any).lang || 'ja';
const deptMap: Record<string,string> = {
  'R&D': 'R&D',
  'Engineering': 'Engineering',
  'Business': 'Business',
  'Sales': 'Sales',
  'Corporate': 'Corporate'
};
const departmentLabel = department ? (deptMap[department] || department) : '';
---
<a href={href} class="job-row" data-dept={department} data-lang={Astro.props.lang || 'ja'}>
  <div class="job-content">
    <span class="job-title">{title}</span>
    <span class="job-meta">{location}{department && ` ・ ${departmentLabel}`}</span>
  </div>
  <div class="job-arrow">
    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M7 17L17 7M17 7H7M17 7V17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
  </div>
</a>

<style>
  .job-row {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1.5rem;
    padding: 1.5rem 1.75rem;
    border: 1px solid rgba(229, 231, 235, 0.6);
    border-radius: var(--nf-radius-lg);
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(248, 250, 252, 0.9) 100%);
    text-decoration: none;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(10px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
  }

  .job-row::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(4, 102, 108, 0.05), transparent);
    transition: left 0.6s;
  }

  .job-row:hover::before {
    left: 100%;
  }

  .job-row:hover {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.95) 0%, rgba(248, 250, 252, 0.95) 100%);
    border-color: var(--nf-color-brand);
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(4, 102, 108, 0.15), 0 4px 12px rgba(0, 0, 0, 0.08);
  }

  .job-content {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    flex: 1;
  }

  .job-title {
    font-weight: 700;
    color: var(--nf-color-fg);
    font-size: 1.125rem;
    line-height: 1.4;
    transition: color 0.3s ease;
  }

  .job-row:hover .job-title {
    color: var(--nf-color-brand);
  }

  .job-meta {
    color: var(--nf-color-muted);
    font-size: 0.95rem;
    line-height: 1.5;
    font-weight: 500;
  }

  .job-arrow {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    background: linear-gradient(135deg, rgba(4, 102, 108, 0.1) 0%, rgba(13, 148, 136, 0.1) 100%);
    border-radius: 50%;
    color: var(--nf-color-muted);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    flex-shrink: 0;
  }

  .job-row:hover .job-arrow {
    background: linear-gradient(135deg, var(--nf-color-brand) 0%, #0d9488 100%);
    color: white;
    transform: scale(1.1);
    box-shadow: 0 4px 12px rgba(4, 102, 108, 0.3);
  }

  /* レスポンシブ対応 */
  @media (max-width: 768px) {
    .job-row {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
      padding: 1.25rem 1.5rem;
    }

    .job-content {
      width: 100%;
    }

    .job-title {
      font-size: 1.05rem;
    }

    .job-meta {
      font-size: 0.9rem;
    }

    .job-arrow {
      align-self: flex-end;
      width: 36px;
      height: 36px;
    }
  }

  @media (max-width: 480px) {
    .job-row {
      padding: 1rem 1.25rem;
      gap: 0.75rem;
    }

    .job-title {
      font-size: 1rem;
    }

    .job-meta {
      font-size: 0.85rem;
    }

    .job-arrow {
      width: 32px;
      height: 32px;
    }
  }
</style>
